<?php
/**
 * Created by IntelliJ IDEA.
 * User: tcook
 * Date: 8/7/19
 * Time: 4:38 PM
 */

namespace Player\Service\Position;


use Player\Model\Player\PlayerCommandInterface;
use Player\Model\Player\PlayerRepositoryInterface;
use Laminas\Db\Adapter\AdapterInterface;
use Laminas\ProgressBar\Adapter\Console;
use Laminas\ProgressBar\ProgressBar;
use Laminas\Db\Sql\Select;
use Laminas\Http\Request;
use Laminas\Http\Client;
use Laminas\Dom\Query;
use Player\Service\SportsInfoApi;

class OffLineService extends ServiceAbstract
{
    private $consoleAdapter;
    private $repository;
    private $command;
    private $db;
    private $sisApi;

    public $specialMetrics = [
        'runBlock' => [
            'field' => 'metrics',
            'sort' => 'ASC',
            'lpad' => 6
        ],
        'passBlock' => [
            'field' => 'metrics',
            'sort' => 'ASC',
            'lpad' => 6
        ],
        'edgeBlock' => [
            'field' => 'metrics',
            'sort' => 'ASC',
            'lpad' => 6
        ]
    ];

    public function __construct(
        AdapterInterface $db,
        Console $consoleAdapter,
        PlayerCommandInterface $command,
        PlayerRepositoryInterface $repository,
        SportsInfoApi $sisApi
    )
    {
        parent::__construct($db, $consoleAdapter, $command, $repository, $sisApi);
        $this->repository = $repository;
        $this->command = $command;
        $this->consoleAdapter = $consoleAdapter;
        $this->sisApi = $sisApi;
    }

    public function calculateMetrics()
    {
        parent::calculateMetrics("OL"); // TODO: Change the autogenerated stub
    }

    public function calculatePercentiles()
    {
        parent::calculatePercentiles("OL", $this->percentileMetrics); // TODO: Change the autogenerated stub
    }

    public function calculateSpecialPercentiles()
    {
        parent::calculatePercentiles("OL", $this->specialMetrics);
    }

    public function calculateSpecialScores()
    {
        $ols = $this->repository->findAllPlayers("OL");
        $progressBar = new ProgressBar($this->consoleAdapter, 0, count($ols));
        $pointer = 0;
        foreach ($ols as $ol) {
            if($ol->getSleeperId() == 787){
                $found = "Nelson";
            }

            $ol->decodeJson();
            if (empty($ol->getMetrics())) {
                continue;
            }

            $info = $ol->getPlayerInfo();
            $metrics = $ol->getMetrics();
            $percentiles = $ol->getPercentiles();

            /*** Calculate Run Block ***/
            $metrics['runBlock'] = null;
            if (!in_array($metrics['benchPress'], [null, "-", "", "null"])
                && !in_array($metrics['broadJump'], [null, "-", "", "null"])) {
                $metrics['runBlock'] = round(($percentiles['bully'] * .30) + ($percentiles['power'] * .70), 2);
            }

            if (in_array($metrics['benchPress'], [null, "-", "", "null"])
                && !in_array($metrics['broadJump'], [null, "-", "", "null"])) {
                $metrics['runBlock'] = $percentiles['power'];
            }

            if (!in_array($metrics['benchPress'], [null, "-", "", "null"])
                && in_array($metrics['broadJump'], [null, "-", "", "null"])) {
                $metrics['runBlock'] = $percentiles['benchPress'];
            }

            /*** Calculate Pass Block ***/
            $metrics['passBlock'] = $metrics['runBlock'];
            if (!in_array($metrics['shuttle'], [null, "-", "", "null"])
                && !in_array($metrics['benchPress'], [null, "-", "", "null"])) {
                $metrics['passBlock'] = round(($percentiles['bully'] * .40) + ($percentiles['elusiveness'] * .60), 2);
            }

            if (in_array($metrics['shuttle'], [null, "-", "", "null"])
                && !in_array($metrics['benchPress'], [null, "-", "", "null"])) {
                $metrics['passBlock'] = round(($percentiles['bully'] * .40) + ($percentiles['speedScore'] * .60),2);
            }

            /*** Calculate Edge Block ***/
            $metrics['edgeBlock'] = null;
            if (!in_array($metrics['benchPress'], [null, "-", "", "null"])
                && !in_array($metrics['fortyTime'], [null, "-", "", "null"])) {
                $metrics['edgeBlock'] = round(($percentiles['bully'] * .25) + ($percentiles['speedScore'] * .60) + ($percentiles['armsInches'] * .15),2);
            } else {
                $metrics['edgeBlock'] = $metrics['passBlock'];
            }

            $ol->setMetrics($metrics);

            $this->command->save($ol);
            $pointer++;
            $progressBar->update($pointer);
        }
        $progressBar->finish();
    }
}
